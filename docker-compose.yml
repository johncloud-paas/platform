# https://blog.filador.fr/je-supervise-mon-traefik-avec-prometheus-et-grafana/
# https://github.com/loganmarchione/homelab-svg-assets/blob/main/ICONS.md
# https://joeeey.com/blog/selfhosting-sso-with-traefik-keycloak-part-1/#setting-up-keycloak
# https://goauthentik.io/docs/providers/proxy/server_traefik

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "3567:3567"
    restart: unless-stopped
    environment:
      - "OVH_ENDPOINT=$OVH_ENDPOINT"
      - "OVH_APPLICATION_KEY=$OVH_APPLICATION_KEY"
      - "OVH_APPLICATION_SECRET=$OVH_APPLICATION_SECRET"
      - "OVH_CONSUMER_KEY=$OVH_CONSUMER_KEY"
      - "TZ=$TZ"
    command:
      - --entrypoints.tcp_ping.address=:3567/tcp
      # - --entrypoints.imap.address=:993/tcp
      # - --entrypoints.smtp.address=:587/tcp
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains.main=$HOST
      - --entrypoints.websecure.http.tls.domains.sans=*.$HOST
      - --entrypoints.websecure.http.middlewares=default@file
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.file.directory=conf.d
      - --providers.file.watch=true
      - --api.dashboard=true
      - --api.insecure=true
      - --experimental.plugins.wafrisPlugin.moduleName=github.com/Wafris/wafris-traefik
      - --experimental.plugins.wafrisPlugin.version=v0.0.2
      - --experimental.plugins.google-oidc-auth-middleware.modulename=github.com/andrewkroh/google-oidc-auth-middleware
      - --experimental.plugins.google-oidc-auth-middleware.version=v0.1.0
      - --certificatesresolvers.letsencrypt.acme.email=$ADMIN_EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      # - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      # - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=ovh
    depends_on:
      - oauth
      - redis
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/conf.d
      - $JOHNCLOUD_ROOT/traefik/letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.$HOST`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.middlewares=forward-auth-verify"
      # - "traefik.http.routers.traefik.middlewares=oidc-auth@docker"
      - "traefik.http.middlewares.oidc-auth.plugin.google-oidc-auth-middleware.oidc.clientID=$PROVIDERS_GOOGLE_CLIENT_ID"
      - "traefik.http.middlewares.oidc-auth.plugin.google-oidc-auth-middleware.oidc.clientSecret=$PROVIDERS_GOOGLE_CLIENT_SECRET"
      # - "traefik.http.middlewares.oidc-auth.plugin.google-oidc-auth-middleware.oidc.callbackPath=/"
      - "traefik.http.middlewares.oidc-auth.plugin.google-oidc-auth-middleware.cookie.secret=$SECRET"
      - "traefik.http.middlewares.oidc-auth.plugin.google-oidc-auth-middleware.cookie.insecure=$INSECURE_COOKIE"
      - "traefik.http.middlewares.oidc-auth.plugin.google-oidc-auth-middleware.authorized.emails=$WHITELIST"
      - "traefik.http.middlewares.oidc-auth.plugin.google-oidc-auth-middleware.authorized.domains=$COOKIE_DOMAIN"
      - "homepage.group=Platform"
      - "homepage.name=Traefik"
      - "homepage.icon=traefik.svg"
      - "homepage.href=https://traefik.$HOST"
      - "homepage.description=Traefik reverse proxy"

  tcp_ping:
    image: ydethe/tcp_ping
    container_name: tcp_ping
    restart: unless-stopped
    environment:
      - PORT=3567
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.ping.rule=HostSNI(`ping.$HOST`)"
      - "traefik.tcp.routers.ping.service=ping_service"
      - "traefik.tcp.routers.ping.entrypoints=tcp_ping"
      - "traefik.tcp.routers.ping.tls.certresolver=letsencrypt"
      - "traefik.tcp.services.ping_service.loadbalancer.server.port=3567"

  oauth:
    image: thomseddon/traefik-forward-auth:latest
    container_name: oauth
    environment:
      - TZ=$TZ
      - PROVIDERS_GOOGLE_CLIENT_ID=$PROVIDERS_GOOGLE_CLIENT_ID
      - PROVIDERS_GOOGLE_CLIENT_SECRET=$PROVIDERS_GOOGLE_CLIENT_SECRET
      - SECRET=$SECRET
      - AUTH_HOST=oauth.$HOST
      - COOKIE_DOMAIN=$COOKIE_DOMAIN
      - WHITELIST=$WHITELIST
      - INSECURE_COOKIE=$INSECURE_COOKIE
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.forward.rule=Host(`oauth.$HOST`)"
      - "traefik.http.routers.forward.entrypoints=websecure"
      - "traefik.http.routers.forward.tls.certresolver=letsencrypt"
      - "traefik.http.services.forward.loadbalancer.server.port=4181"
      - "traefik.http.middlewares.forward-auth-verify.forwardauth.address=http://oauth:4181"      
      - "traefik.http.middlewares.forward-auth-verify.forwardauth.authResponseHeaders=X-Forwarded-User"

  certdumper:
    restart: unless-stopped
    image: ldez/traefik-certs-dumper:v2.8.1
    container_name: certdumper
    entrypoint: sh -c '
      apk add jq
      ; while ! [ -e /traefik/acme.json ]
      || ! [ `jq ".[] | .Certificates | length" /traefik/acme.json` != 0 ]; do
      sleep 1
      ; done
      && traefik-certs-dumper file --version v2 --watch
        --source /traefik/acme.json --dest /output
        --domain-subdir --crt-ext=.pem --key-ext=.pem'
    volumes:
      - $JOHNCLOUD_ROOT/traefik/letsencrypt:/traefik:ro
      - $JOHNCLOUD_ROOT/traefik/certs:/output
    depends_on:
      - traefik
    labels:
      - "traefik.enable=false"

  portainer:
    image: portainer/portainer-ee:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - $JOHNCLOUD_ROOT/portainer/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.$HOST`)"   
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "homepage.group=Platform"
      - "homepage.name=Portainer"
      - "homepage.icon=portainer.svg"
      - "homepage.href=https://portainer.$HOST"
      - "homepage.description=Container Management Software"

  redis:
    image: redis:7.2.0
    container_name: redis
    environment:
      - TZ=$TZ
      - ENABLE_OVERCOMMIT_MEMORY=true
    labels:
      - "traefik.enable=false"

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    depends_on:
      - oauth
      - tailscale
    volumes:
      - $JOHNCLOUD_ROOT/home/config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.homepage.rule=Host(`home.$HOST`)"
        - "traefik.http.routers.homepage.entrypoints=websecure"
        - "traefik.http.routers.homepage.tls.certresolver=letsencrypt"
        - "traefik.http.routers.homepage.middlewares=forward-auth-verify"
 
  tailscale:
    image: ghcr.io/tailscale/tailscale:latest
    container_name: tailscale
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - VIRTUAL_HOST=tailscale.${HOST}
      - TS_ACCEPT_DNS=$TS_ACCEPT_DNS
      - TS_AUTH_ONCE=$TS_AUTH_ONCE
      - TS_AUTHKEY=$TS_AUTHKEY
      - TS_DEST_IP=$TS_DEST_IP
      - TS_HOSTNAME=$TS_HOSTNAME
      - TS_OUTBOUND_HTTP_PROXY_LISTEN=$TS_OUTBOUND_HTTP_PROXY_LISTEN
      - TS_ROUTES=$TS_ROUTES
      - TS_SOCKET=$TS_SOCKET
      - TS_SOCKS5_SERVER=$TS_SOCKS5_SERVER
      - TS_USERSPACE=$TS_USERSPACE
      - TS_STATE_DIR=$TS_STATE_DIR
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun
    labels:
      - "traefik.enable=false"

networks:
  default:
    external: true
    name: traefik-proxy
    
